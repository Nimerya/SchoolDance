/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scuola;

/**
 * Importo le librerie necessarie.
 */
import java.awt.Color;
import java.util.HashMap;
import java.util.Calendar;

/**
 *
 * @author Vale
 */
/**
 * Realizzazione della classe NewJFrame che realizza l'interfaccia grafica.
 * E' una classe che deriva dalla classe jFrame contenuta nella libreria swing.
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Costruttore.
     */
    public NewJFrame() {
        initComponents();//Metodo che utilizzato per inizializzare i parametri della classe.
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selezione = new javax.swing.ButtonGroup();
        ComboBoxElencoCorsi = new javax.swing.JComboBox();
        AggiungiRadioButton = new javax.swing.JRadioButton();
        EliminaRadioButton = new javax.swing.JRadioButton();
        TextCF = new javax.swing.JTextField();
        TextNome = new javax.swing.JTextField();
        TextCognome = new javax.swing.JTextField();
        TextGiorno = new javax.swing.JTextField();
        TextAnno = new javax.swing.JTextField();
        TextAf = new javax.swing.JTextField();
        TextEliminaCF = new javax.swing.JTextField();
        ButtonApplica = new javax.swing.JButton();
        ButtonReset = new javax.swing.JButton();
        LabelCF = new javax.swing.JLabel();
        LabelNome = new javax.swing.JLabel();
        LabelCognome = new javax.swing.JLabel();
        LabelData = new javax.swing.JLabel();
        LabelAf = new javax.swing.JLabel();
        LabelEliminaCF = new javax.swing.JLabel();
        LabelScegliCorso = new javax.swing.JLabel();
        LabelScuola = new javax.swing.JLabel();
        TextMese = new javax.swing.JTextField();
        LabelErrore = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ComboBoxElencoCorsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxElencoCorsiActionPerformed(evt);
            }
        });

        selezione.add(AggiungiRadioButton);
        AggiungiRadioButton.setText("Aggiungi");
        AggiungiRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                AggiungiRadioButtonItemStateChanged(evt);
            }
        });
        AggiungiRadioButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                AggiungiRadioButtonStateChanged(evt);
            }
        });
        AggiungiRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AggiungiRadioButtonActionPerformed(evt);
            }
        });

        selezione.add(EliminaRadioButton);
        EliminaRadioButton.setText("Elimina");
        EliminaRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                EliminaRadioButtonItemStateChanged(evt);
            }
        });
        EliminaRadioButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                EliminaRadioButtonStateChanged(evt);
            }
        });

        TextCF.setEditable(false);
        TextCF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextCFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TextCFFocusLost(evt);
            }
        });
        TextCF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextCFActionPerformed(evt);
            }
        });

        TextNome.setEditable(false);
        TextNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextNomeActionPerformed(evt);
            }
        });

        TextCognome.setEditable(false);

        TextGiorno.setEditable(false);
        TextGiorno.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextGiorno.setText("gg");
        TextGiorno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextGiornoFocusGained(evt);
            }
        });
        TextGiorno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextGiornoActionPerformed(evt);
            }
        });

        TextAnno.setEditable(false);
        TextAnno.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextAnno.setText("aaaa");
        TextAnno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextAnnoFocusGained(evt);
            }
        });
        TextAnno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextAnnoActionPerformed(evt);
            }
        });

        TextAf.setEditable(false);
        TextAf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextAfActionPerformed(evt);
            }
        });

        TextEliminaCF.setEditable(false);
        TextEliminaCF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextEliminaCFActionPerformed(evt);
            }
        });

        ButtonApplica.setText("Applica");
        ButtonApplica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonApplicaMouseClicked(evt);
            }
        });

        ButtonReset.setText("Reset");
        ButtonReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonResetMouseClicked(evt);
            }
        });
        ButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonResetActionPerformed(evt);
            }
        });

        LabelCF.setText("Codice Fiscale: ");

        LabelNome.setText("Nome:");

        LabelCognome.setText("Cognome:");

        LabelData.setText("Data di nascita:");

        LabelAf.setText("Anni frequenza:");

        LabelEliminaCF.setText("Codice Fiscale:");

        LabelScegliCorso.setText("Scegli un corso:");

        LabelScuola.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        LabelScuola.setForeground(new java.awt.Color(153, 0, 153));
        LabelScuola.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        TextMese.setEditable(false);
        TextMese.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextMese.setText("mm");
        TextMese.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextMeseFocusGained(evt);
            }
        });
        TextMese.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextMeseActionPerformed(evt);
            }
        });

        LabelErrore.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        LabelErrore.setForeground(new java.awt.Color(252, 0, 0));
        LabelErrore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelErrore.setText("Errore: ricontrolla i dati inseriti!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LabelScuola, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelNome)
                    .addComponent(LabelCognome)
                    .addComponent(LabelData)
                    .addComponent(LabelAf)
                    .addComponent(LabelCF, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(ButtonApplica, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)
                        .addComponent(ButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(TextNome, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TextCF, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TextCognome, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46)
                                .addComponent(LabelEliminaCF)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TextEliminaCF, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(TextAf, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(TextGiorno, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TextMese, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TextAnno, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(LabelErrore, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(LabelScegliCorso, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboBoxElencoCorsi, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(127, 127, 127))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AggiungiRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(EliminaRadioButton)
                        .addGap(119, 119, 119))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(LabelScuola, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelScegliCorso, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBoxElencoCorsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AggiungiRadioButton)
                    .addComponent(EliminaRadioButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelCF)
                    .addComponent(TextCF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelEliminaCF)
                    .addComponent(TextEliminaCF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelCognome)
                    .addComponent(TextCognome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelData)
                    .addComponent(TextAnno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextGiorno)
                    .addComponent(TextMese))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextAf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelAf))
                .addGap(25, 25, 25)
                .addComponent(LabelErrore, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonReset)
                    .addComponent(ButtonApplica))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonResetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonResetActionPerformed

    private void TextGiornoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextGiornoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextGiornoActionPerformed

    private void TextCFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextCFActionPerformed
             // TODO add your handling code here:
    }//GEN-LAST:event_TextCFActionPerformed

    private void TextCFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextCFFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_TextCFFocusGained

    private void TextMeseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextMeseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextMeseActionPerformed

    private void TextAnnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextAnnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextAnnoActionPerformed

    private void TextNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextNomeActionPerformed

    private void TextAfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextAfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextAfActionPerformed

    private void TextEliminaCFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextEliminaCFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextEliminaCFActionPerformed

    private void ComboBoxElencoCorsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxElencoCorsiActionPerformed
                // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxElencoCorsiActionPerformed
    
    
    /**
     * Metodo che analizza l'evento "E'stato cliccato il pulsante Reset" e ne conseguono delle operazioni.
     * @param evt evento
     */
    private void ButtonResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonResetMouseClicked
        reset();//Richiamo della funzione reset()fatta in seguito.
    }//GEN-LAST:event_ButtonResetMouseClicked
    
    
    /**
     * Metodo che nel momento in cui si clicca sull'area di testo relativa al giorno, selezione tutta la stringa "gg".
     * @param evt evento: si è clicccato (fatto focus) sull'area di testo relativa all'inserimento del giorno
     */
    private void TextGiornoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextGiornoFocusGained
        TextGiorno.selectAll();        
    }//GEN-LAST:event_TextGiornoFocusGained

    
    /**
     * Metodo che nel momento in cui si clicca sull'area di testo relativa al mese, selezione tutta la stringa "mm".
     * @param evt evento: si è clicccato (fatto focus) sull'area di testo relativa all'inserimento del mese 
     */
    private void TextMeseFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextMeseFocusGained
        TextMese.selectAll();        
    }//GEN-LAST:event_TextMeseFocusGained

    
    /**
     * Metodo che nel momento in cui si clicca sull'area di testo relativa all'anno, selezione tutta la stringa "aaaa".
     * @param evt evento: si è clicccato (fatto focus) sull'area di testo relativa all'inserimento dell'anno
     */
    private void TextAnnoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextAnnoFocusGained
        TextAnno.selectAll();        
    }//GEN-LAST:event_TextAnnoFocusGained

    
    private void AggiungiRadioButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AggiungiRadioButtonStateChanged
      // TODO add your handling code here:
    }//GEN-LAST:event_AggiungiRadioButtonStateChanged

    
    /**
     * Metodo che rende le aree di testo editabili o meno a seconda che il RadioButton Aggiungi sia selezionato o meno.
     * @param evt evento: è stato selezionato o deselezionato il RadioButton Aggiungi
     */
    private void AggiungiRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_AggiungiRadioButtonItemStateChanged
        if(!AggiungiRadioButton.isSelected()){
            reset();   
            TextCF.setEditable(false);
            TextNome.setEditable(false);
            TextCognome.setEditable(false);
            TextGiorno.setEditable(false);
            TextMese.setEditable(false);
            TextAnno.setEditable(false);
            TextAf.setEditable(false);
        }
        else{
            TextCF.setEditable(true);
            TextNome.setEditable(true);
            TextCognome.setEditable(true);
            TextGiorno.setEditable(true);
            TextMese.setEditable(true);
            TextAnno.setEditable(true);
            TextAf.setEditable(true); 
            
        }   
    }//GEN-LAST:event_AggiungiRadioButtonItemStateChanged

    private void AggiungiRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AggiungiRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AggiungiRadioButtonActionPerformed

    private void EliminaRadioButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_EliminaRadioButtonStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_EliminaRadioButtonStateChanged

    
    /**
     * Metodo che rende le aree di testo editabili o meno a seconda che il RadioButton Elimina sia selezionato o meno.
     * @param evt evento:è stato selezionato o deselezionato il RadioButton Elimina
     */
    private void EliminaRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_EliminaRadioButtonItemStateChanged
        if(!EliminaRadioButton.isSelected()){
            reset();   
            TextEliminaCF.setEditable(false);
            
        }
        else{
            TextEliminaCF.setEditable(true);
        }  
    }//GEN-LAST:event_EliminaRadioButtonItemStateChanged

    private void TextCFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextCFFocusLost
           // TODO add your handling code here:
    }//GEN-LAST:event_TextCFFocusLost

    
    /**
     * Metodo che viene attivato nel momento in cui viene cliccato il bottone Applica:
     * si prendono i dati inseriti e si realizzano le poerazioni di aggiunta o eliminazione dell'allievo.
     * @param evt evento:click mouse sul bottone Applica
     */
    private void ButtonApplicaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonApplicaMouseClicked
        if (AggiungiRadioButton.isSelected()){//Controllo se è selezionato il RadioButton Aggiungi.Se si:
            if (!(TextGiorno.getText().equals("gg") || TextMese.getText().equals("mm") || TextAnno.getText().equals("aaaa")|| TextAf.getText().equals(""))){//Controllo che nei cami data siano stati inseriti correttamente i dati
                int g=Integer.parseInt(TextGiorno.getText());//Trasformo il giorno in intero
                int m=Integer.parseInt(TextMese.getText());//Trasformo il mese in intero
                int a=Integer.parseInt(TextAnno.getText());//Trasformo l'anno in intero
                int af=Integer.parseInt(TextAf.getText());//Trasformo gli anni di frequenza in intero
                if(TextCF.getText().equals("") || TextNome.getText().equals("") || TextCognome.getText().equals("") || TextGiorno.getText().equals("") || TextMese.getText().equals("") || TextAnno.getText().equals("") || g<1 || g>31 || m>12 || m<1 || a<1900 || a>2015){//Controllo se i campi sono vuoti o riempiti n modo errato
                    LabelErrore.setForeground(Color.RED);
                    LabelErrore.setText("Errore: controlla i dati inseriti");
                }
                else{//Se i campi sono riempiti correttamente
                    //Salvo i dati scritti in variabili di appoggio:
                    String CFtemp= TextCF.getText();
                    String Ntemp= TextNome.getText();
                    String Cogntemp= TextCognome.getText();
                    int gd= g;
                    int md= m;
                    int ad= a;
                    int AF=af;
                    Calendar d= Calendar.getInstance();//Realizzo l'oggetto data con i valori inseriti dall'utente
                        d.set(ad,md,gd);
                    Allievo all=new Allievo (Ntemp,Cogntemp,d,CFtemp,AF);//Creo l'oggetto allievo con i rispettivi dati inseriti dall'utente
                    String SelectCourse= ComboBoxElencoCorsi.getSelectedItem().toString();//Leggo dal ComboBox il corso selezionato
                    String codCourse=SelectCourse.substring(0,3);//Ne ricavo il codice
                    HashMap<String, Corso> c=scuolatemp.get_corsi();//Ricavo l'HashMap contenente i corsi della scuola in esame
                    Corso corsotemp=c.get(codCourse);// Creo un oggetto corso temporaneo e vi appoggio il corso corrispondente al codice utilizzato per la ricerca
                    corsotemp.add(all);//Aggiungo l'allievo al corso
                    scuolatemp.ScriviFile();//Riscrivo il file con tutte le modifche apportate 
                    scuolatemp.StampaInfo();//Stampo le informazioni
                    LabelErrore.setForeground(Color.GREEN);
                    LabelErrore.setText("L'inserimento è avvenuto correttamente");
                }    
            }
            else{//Se i campi della data e degli anni di frequenza sono inseriti in modo errato
                LabelErrore.setForeground(Color.RED);
                LabelErrore.setText("Errore: controlla i dati inseriti");
            }  
        }
        else if(EliminaRadioButton.isSelected()){//Se invece è selezionato il RadioButton Elimina 
            if (TextEliminaCF.getText().equals("")){//Controlla se l'area di testo è vuota
                LabelErrore.setForeground(Color.RED);
                LabelErrore.setText("Errore: controlla i dati inseriti");
            }
            else{//Se non è vuota 
                String CF= TextEliminaCF.getText();//Salvo i dati inseriti in una stringa
                String SelectCourse= ComboBoxElencoCorsi.getSelectedItem().toString().substring(0,3);//Leggo il corso selezionato nella ComboBox
                HashMap<String, Corso> c= c=scuolatemp.get_corsi();//Ricavo l'HashMap contenente l'elenco dei corsi della scola
                Corso corsotemp=c.get(SelectCourse);// Creo un oggetto corso temporaneo e vi appoggio il corso corrispondente al codice utilizzato per la ricerca
                corsotemp.elimina_a(CF);//Elimino l'allievo dal corso 
                scuolatemp.ScriviFile();//Riscrivo il file con le modifiche apportate
                scuolatemp.StampaInfo();//Stampo le informazioni relative alla scuola
                LabelErrore.setForeground(Color.GREEN);
                LabelErrore.setText("L'eliminazione è avvenuta correttamente");
            }
        }
    }//GEN-LAST:event_ButtonApplicaMouseClicked

    
    /**
     * Metodo che gestisce l'interfaccia realizzata
     * @param s L'oggetto Scuola su cui bisogna apportare la modifica 
     */
    public void gui(Scuola s){
        scuolatemp=s;
        LabelErrore.setText(" ");
        LabelScuola.setText("Scuola: "+s.get_nome());
        HashMap<String, Corso> c=s.get_corsi();
        for (String key: c.keySet()) //Scorro l'HashMap
            ComboBoxElencoCorsi.addItem(key+" "+c.get(key).get_nome());//Assegno gli item al ComboBox
}
    
    
    /**
     * Metodo che fa il reset di tutti i campi
     */
    public void reset(){
        TextCF.setText("");
        TextNome.setText("");
        TextCognome.setText("");
        TextGiorno.setText("gg");
        TextMese.setText("mm");
        TextAnno.setText("aaaa");
        TextAf.setText("");
        TextEliminaCF.setText("");
        selezione.clearSelection();
        LabelErrore.setText(" ");
    }
    
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton AggiungiRadioButton;
    private javax.swing.JButton ButtonApplica;
    private javax.swing.JButton ButtonReset;
    private javax.swing.JComboBox ComboBoxElencoCorsi;
    private javax.swing.JRadioButton EliminaRadioButton;
    private javax.swing.JLabel LabelAf;
    private javax.swing.JLabel LabelCF;
    private javax.swing.JLabel LabelCognome;
    private javax.swing.JLabel LabelData;
    private javax.swing.JLabel LabelEliminaCF;
    private javax.swing.JLabel LabelErrore;
    private javax.swing.JLabel LabelNome;
    private javax.swing.JLabel LabelScegliCorso;
    private javax.swing.JLabel LabelScuola;
    private javax.swing.JTextField TextAf;
    private javax.swing.JTextField TextAnno;
    private javax.swing.JTextField TextCF;
    private javax.swing.JTextField TextCognome;
    private javax.swing.JTextField TextEliminaCF;
    private javax.swing.JTextField TextGiorno;
    private javax.swing.JTextField TextMese;
    private javax.swing.JTextField TextNome;
    private javax.swing.ButtonGroup selezione;
    // End of variables declaration//GEN-END:variables
    private Scuola scuolatemp;
}
